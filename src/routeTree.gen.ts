/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as ChangePasswordImport } from './routes/change-password'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const AuthenticatedSubjectsLazyImport = createFileRoute(
  '/_authenticated/subjects',
)()
const AuthenticatedStudentsLazyImport = createFileRoute(
  '/_authenticated/students',
)()
const AuthenticatedParentsLazyImport = createFileRoute(
  '/_authenticated/parents',
)()
const AuthenticatedDashboardLazyImport = createFileRoute(
  '/_authenticated/dashboard',
)()
const AuthenticatedClassesLazyImport = createFileRoute(
  '/_authenticated/classes',
)()
const AuthenticatedTeachersIndexLazyImport = createFileRoute(
  '/_authenticated/teachers/',
)()
const AuthenticatedTeachersTeacherIdLazyImport = createFileRoute(
  '/_authenticated/teachers/$teacherId',
)()

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ChangePasswordRoute = ChangePasswordImport.update({
  path: '/change-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedSubjectsLazyRoute = AuthenticatedSubjectsLazyImport.update({
  path: '/subjects',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/subjects.lazy').then((d) => d.Route),
)

const AuthenticatedStudentsLazyRoute = AuthenticatedStudentsLazyImport.update({
  path: '/students',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/students.lazy').then((d) => d.Route),
)

const AuthenticatedParentsLazyRoute = AuthenticatedParentsLazyImport.update({
  path: '/parents',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/parents.lazy').then((d) => d.Route),
)

const AuthenticatedDashboardLazyRoute = AuthenticatedDashboardLazyImport.update(
  {
    path: '/dashboard',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/dashboard.lazy').then((d) => d.Route),
)

const AuthenticatedClassesLazyRoute = AuthenticatedClassesLazyImport.update({
  path: '/classes',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/classes.lazy').then((d) => d.Route),
)

const AuthenticatedTeachersIndexLazyRoute =
  AuthenticatedTeachersIndexLazyImport.update({
    path: '/teachers/',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/teachers/index.lazy').then((d) => d.Route),
  )

const AuthenticatedTeachersTeacherIdLazyRoute =
  AuthenticatedTeachersTeacherIdLazyImport.update({
    path: '/teachers/$teacherId',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/teachers/$teacherId.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/change-password': {
      id: '/change-password'
      path: '/change-password'
      fullPath: '/change-password'
      preLoaderRoute: typeof ChangePasswordImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/classes': {
      id: '/_authenticated/classes'
      path: '/classes'
      fullPath: '/classes'
      preLoaderRoute: typeof AuthenticatedClassesLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/parents': {
      id: '/_authenticated/parents'
      path: '/parents'
      fullPath: '/parents'
      preLoaderRoute: typeof AuthenticatedParentsLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/students': {
      id: '/_authenticated/students'
      path: '/students'
      fullPath: '/students'
      preLoaderRoute: typeof AuthenticatedStudentsLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/subjects': {
      id: '/_authenticated/subjects'
      path: '/subjects'
      fullPath: '/subjects'
      preLoaderRoute: typeof AuthenticatedSubjectsLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/teachers/$teacherId': {
      id: '/_authenticated/teachers/$teacherId'
      path: '/teachers/$teacherId'
      fullPath: '/teachers/$teacherId'
      preLoaderRoute: typeof AuthenticatedTeachersTeacherIdLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/teachers/': {
      id: '/_authenticated/teachers/'
      path: '/teachers'
      fullPath: '/teachers'
      preLoaderRoute: typeof AuthenticatedTeachersIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedClassesLazyRoute: typeof AuthenticatedClassesLazyRoute
  AuthenticatedDashboardLazyRoute: typeof AuthenticatedDashboardLazyRoute
  AuthenticatedParentsLazyRoute: typeof AuthenticatedParentsLazyRoute
  AuthenticatedStudentsLazyRoute: typeof AuthenticatedStudentsLazyRoute
  AuthenticatedSubjectsLazyRoute: typeof AuthenticatedSubjectsLazyRoute
  AuthenticatedTeachersTeacherIdLazyRoute: typeof AuthenticatedTeachersTeacherIdLazyRoute
  AuthenticatedTeachersIndexLazyRoute: typeof AuthenticatedTeachersIndexLazyRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedClassesLazyRoute: AuthenticatedClassesLazyRoute,
  AuthenticatedDashboardLazyRoute: AuthenticatedDashboardLazyRoute,
  AuthenticatedParentsLazyRoute: AuthenticatedParentsLazyRoute,
  AuthenticatedStudentsLazyRoute: AuthenticatedStudentsLazyRoute,
  AuthenticatedSubjectsLazyRoute: AuthenticatedSubjectsLazyRoute,
  AuthenticatedTeachersTeacherIdLazyRoute:
    AuthenticatedTeachersTeacherIdLazyRoute,
  AuthenticatedTeachersIndexLazyRoute: AuthenticatedTeachersIndexLazyRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/change-password': typeof ChangePasswordRoute
  '/login': typeof LoginRoute
  '/classes': typeof AuthenticatedClassesLazyRoute
  '/dashboard': typeof AuthenticatedDashboardLazyRoute
  '/parents': typeof AuthenticatedParentsLazyRoute
  '/students': typeof AuthenticatedStudentsLazyRoute
  '/subjects': typeof AuthenticatedSubjectsLazyRoute
  '/teachers/$teacherId': typeof AuthenticatedTeachersTeacherIdLazyRoute
  '/teachers': typeof AuthenticatedTeachersIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/change-password': typeof ChangePasswordRoute
  '/login': typeof LoginRoute
  '/classes': typeof AuthenticatedClassesLazyRoute
  '/dashboard': typeof AuthenticatedDashboardLazyRoute
  '/parents': typeof AuthenticatedParentsLazyRoute
  '/students': typeof AuthenticatedStudentsLazyRoute
  '/subjects': typeof AuthenticatedSubjectsLazyRoute
  '/teachers/$teacherId': typeof AuthenticatedTeachersTeacherIdLazyRoute
  '/teachers': typeof AuthenticatedTeachersIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/change-password': typeof ChangePasswordRoute
  '/login': typeof LoginRoute
  '/_authenticated/classes': typeof AuthenticatedClassesLazyRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardLazyRoute
  '/_authenticated/parents': typeof AuthenticatedParentsLazyRoute
  '/_authenticated/students': typeof AuthenticatedStudentsLazyRoute
  '/_authenticated/subjects': typeof AuthenticatedSubjectsLazyRoute
  '/_authenticated/teachers/$teacherId': typeof AuthenticatedTeachersTeacherIdLazyRoute
  '/_authenticated/teachers/': typeof AuthenticatedTeachersIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/change-password'
    | '/login'
    | '/classes'
    | '/dashboard'
    | '/parents'
    | '/students'
    | '/subjects'
    | '/teachers/$teacherId'
    | '/teachers'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/change-password'
    | '/login'
    | '/classes'
    | '/dashboard'
    | '/parents'
    | '/students'
    | '/subjects'
    | '/teachers/$teacherId'
    | '/teachers'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/change-password'
    | '/login'
    | '/_authenticated/classes'
    | '/_authenticated/dashboard'
    | '/_authenticated/parents'
    | '/_authenticated/students'
    | '/_authenticated/subjects'
    | '/_authenticated/teachers/$teacherId'
    | '/_authenticated/teachers/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  ChangePasswordRoute: typeof ChangePasswordRoute
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  ChangePasswordRoute: ChangePasswordRoute,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/change-password",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.ts"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/classes",
        "/_authenticated/dashboard",
        "/_authenticated/parents",
        "/_authenticated/students",
        "/_authenticated/subjects",
        "/_authenticated/teachers/$teacherId",
        "/_authenticated/teachers/"
      ]
    },
    "/change-password": {
      "filePath": "change-password.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_authenticated/classes": {
      "filePath": "_authenticated/classes.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboard": {
      "filePath": "_authenticated/dashboard.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/parents": {
      "filePath": "_authenticated/parents.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/students": {
      "filePath": "_authenticated/students.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/subjects": {
      "filePath": "_authenticated/subjects.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/teachers/$teacherId": {
      "filePath": "_authenticated/teachers/$teacherId.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/teachers/": {
      "filePath": "_authenticated/teachers/index.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
